# Backend to use: "xrender" or "glx".
# GLX backend is typically much faster but depends on a sane driver.
backend = "glx";
glx-no-stencil = true;
glx-copy-from-front = false;

# GLX backend: GLX buffer swap method we assume.
# Could be undefined (0), copy (1), exchange (2), 3-6, or buffer-age (-1).
# undefined is the slowest and the safest, and the default value.
# copy is fastest, but may fail on some drivers,
# 2-6 are gradually slower but safer (6 is still faster than 0).
# Usually, double buffer means 2, triple buffer means 3.
# buffer-age means auto-detect using GLX_EXT_buffer_age, supported by some drivers.
# Useless with --glx-use-copysubbuffermesa.
# Partially breaks --resize-damage.
# Defaults to undefined.
#glx-swap-method = "undefined";
use-damage = true



#################################
#
# Opacity
#
#################################

inactive-opacity = 0.9;
active-opacity = 0.9;
frame-opacity = 0.9;
inactive-opacity-override = false;
#opacity-rule = [ "80:class_g = 'kitty'", "80:class_g = 'emacs'" ];  
opacity-rule = [  "80:class_g = 'kitty'"
                , "100:class_g = 'firefox'"
		, "80:class_g = 'Emacs'" 
		, "80:class_g = 'rofi'" 
		];  
# opacity-rule = [];  


# ## Dim inactive windows. (0.0 - 1.0)
inactive-dim = 0.1;
# Blur background of transparent windows. Bad performance with X Render backend. GLX backend is preferred.
blur-background = true;
# Blur background of opaque windows with transparent frames as well.
blur-background-frame = true;
# # Do not let blur radius adjust based on window opacity.
blur-background-fixed = true;
blur: {
	method = "dual_kawase";
        strength = 5.0;
	deviation = 1.0;
	kernel = "11x11gaussian";
}
#blur-kern = "3x3box";
# Add dual-kawase blur
#blur-method = "dual_kawase";
#blur-strength = 20;
blur-background-exclude = [
   "class_g = 'firefox'"
];

#################################
#             Corners           #
#################################
# requires: https://github.com/sdhand/compton or https://github.com/jonaburg/picom
corner-radius = 6.0;
#rounded-corners-exclude = [
#   # "widthb > 1365 && heightb > 736" # For smart gaps and a non-floating bar
#   # "class_g = 'Dunst'"
#];
#corner-radius = 20.0;
#rounded-corners-exclude = [
  #"window_type = 'normal'",
#  "class_g = 'awesome'",
#  "class_g = 'dmenu'",
#  "class_g = 'dwm'",
#  "class_g = 'URxvt'",
#  "class_g = 'XTerm'",
#  "class_g = 'kitty'",
#  "class_g = 'Alacritty'",
#  "class_g = 'Polybar'",
#  "class_g = 'code-oss'",
#  "class_g = 'xmobar'",
#  "class_g = 'firefox'",
#  "class_g = 'Thunderbird'"
#];
#round-borders = 1;
#round-borders-exclude = [
#  "class_g = 'xmobar'",
#];



#################################
#
# Fading
#
#################################

# Fade windows during opacity changes.
fading = true;
#fading = false;
# The time between steps in a fade in milliseconds. (default 10).
fade-delta = 4;
# Opacity change between steps while fading in. (default 0.028).
fade-in-step = 0.16;
# Opacity change between steps while fading out. (default 0.03).
fade-out-step = 0.16;
# Fade windows in/out when opening/closing
# no-fading-openclose = true;

# Specify a list of conditions of windows that should not be faded.
fade-exclude = [ ];

#################################
#             Shadows           #
#################################

#shadow = true;
#shadow-radius = 12;
#shadow-opacity = 0.25;
#shadow-offset-x = -7;
#shadow-offset-y = -7;
#shadow-exclude = [
#    "class_g = 'XAVA'"
#];



